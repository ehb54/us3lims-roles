---
- name: Create newus3 database
  mysql_db:
        name: "{{ us3_db_name }}"
        state: present
        login_user: root
        login_password: "{{ root_db_pass }}"

- name: Create global database
  mysql_db:
        name: "{{ gbl_db_name }}"
        state: present
        login_user: root
        login_password: "{{ root_db_pass }}"

- name: Create us3 database
  mysql_db:
        name: "us3"
        state: present
        login_user: root
        login_password: "{{ root_db_pass }}"

- name: Create us3_notice database
  mysql_db:
        name: us3_notice
        state: present
        login_user: root
        login_password: "{{ root_db_pass }}"

#start table creation process

# us3_notice
- name: copy over us3_notice table file
  copy:
        src: us3_notice.sql
        dest: /tmp
  when: root_pwd_check.rc == 0

- name: Inject tables for us3_notice
  mysql_db:
        login_user: root
        login_password: "{{ root_db_pass }}"
        name: us3_notice
        state: import
        login_host: localhost
        target: /tmp/us3_notice.sql
  when: root_pwd_check.rc == 0

# newus3user
- name: Copy over the metadata_create file
  copy:
        src: metadata_create.sql
        dest: /tmp
  when: root_pwd_check.rc == 0

- name: Inject metadata file for newus3
  mysql_db:
        login_user: root
        login_password: "{{ root_db_pass }}"
        name: newus3
        state: import
        login_host: localhost
        target: /tmp/metadata_create.sql
  when: root_pwd_check.rc == 0

- name: Copy over the people_create tables for newus3
  copy:
        src: people_create.sql
        dest: /tmp
  when: root_pwd_check.rc == 0

- name: Inject the people_create file into newus3
  mysql_db:
        login_user: root
        login_password: "{{ root_db_pass }}"
        name: newus3
        state: import
        target: /tmp/people_create.sql
  when: root_pwd_check.rc == 0

# gfac
- name: Copy over the gfac file
  copy:
        src: gfac-db.sql
        dest: /tmp
  when: root_pwd_check.rc == 0

- name: Inject gfac-db file into gfac
  mysql_db:
        login_user: root
        login_password: "{{ root_db_pass }}"
        name: gfac
        state: import
        target: /tmp/gfac-db.sql
  when: root_pwd_check.rc == 0

  # insert default admins for newus3_db
- name: Create a temp people sql file for dumping admins to newus3 database
  template:
          src: new_people_inject.sql.j2
          dest: /tmp/new_people_inject.sql
  when: root_pwd_check.rc == 0

- name: Inject the temp people sql file
  mysql_db:
        login_user: root
        login_password: "{{ root_db_pass }}"
        name: newus3
        state: import
        target: /tmp/new_people_inject.sql
  when: root_pwd_check.rc == 0

- name: Clean up tmp people sql file
  file :
        path: /tmp/new_people_inject.sql
        state: absent
  when: root_pwd_check.rc == 0

# global
- name: Copy over the global file
  copy:
        src: global-db.sql
        dest: /tmp
  when: root_pwd_check.rc == 0

- name: Inject global-db file into uslims3_global
  mysql_db:
        login_user: root
        login_password: "{{ root_db_pass }}"
        name: uslims3_global
        state: import
        target: /tmp/global-db.sql
  when: root_pwd_check.rc == 0

# Ansible's mysql_db does not support a "chdir" option, so need to use the shell
#- name: Populate us3 tables
#  mysql_db:
#        chdir: /home/us3/lims/database/sql
#        login_user: root
#        login_password: "{{ root_db_pass }}"
#        name: us3
#        state: import
#        target: 
#  when: root_pwd_check.rc == 0

- name: Create us3 db
  mysql_db:
    login_user: root
    login_password: "{{ root_db_pass }}"
    name: us3
    state: present
#  when: root_pwd_check.rc == 0

- name: Populate us3 tables
  shell:
    chdir: /home/us3/lims/database/sql
    cmd: mysql -u root -p'{{ root_db_pass }}' us3 < /home/us3/lims/database/sql/us3.sql
#  when: root_pwd_check.rc == 0
    